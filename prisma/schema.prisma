generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole        @default(USER)
  accounts      Account[]

  watchlist Watchlist?
}


model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model Coin {
  CoinId     String          @id @default(cuid())
  watchlists WatchlistCoin[]
}

model Watchlist {
  id     String          @id @default(uuid())
  userId String          @unique
  user   User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  coins  WatchlistCoin[]
}

model WatchlistCoin {
  id          String    @id @default(uuid())
  watchlistId String
  coinId      String
  coin        Coin      @relation(fields: [coinId], references: [CoinId], onDelete: Cascade)
  watchlist   Watchlist @relation(fields: [watchlistId], references: [id], onDelete: Cascade)

  @@unique([watchlistId, coinId])
}
